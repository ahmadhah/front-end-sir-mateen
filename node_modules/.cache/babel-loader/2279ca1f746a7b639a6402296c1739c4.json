{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadhannan/Downloads/fgfgfg/src/_metronic/partials/widgets/mixed/MixedWidget10.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useRef } from 'react';\nimport ApexCharts from 'apexcharts';\nimport { getCSSVariableValue } from '../../../assets/ts/_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MixedWidget10 = _ref => {\n  _s();\n  let {\n    className,\n    chartColor,\n    chartHeight\n  } = _ref;\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!chartRef.current) {\n      return;\n    }\n    const chart = new ApexCharts(chartRef.current, chartOptions(chartColor, chartHeight));\n    if (chart) {\n      chart.render();\n    }\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chartRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body d-flex flex-column p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow-1 card-p pb-0\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-stack flex-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"me-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              className: \"text-dark text-hover-primary fw-bolder fs-3\",\n              children: \"Generate Reports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-muted fs-7 fw-bold\",\n              children: \"Finance and accounting reports\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `fw-bolder fs-3 text-${chartColor}`,\n            children: \"$24,500\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chartRef,\n        className: \"mixed-widget-7-chart card-rounded-bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(MixedWidget10, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = MixedWidget10;\nconst chartOptions = (chartColor, chartHeight) => {\n  const labelColor = getCSSVariableValue('--bs-gray-800');\n  const strokeColor = getCSSVariableValue('--bs-gray-300');\n  const baseColor = getCSSVariableValue('--bs-' + chartColor);\n  const lightColor = getCSSVariableValue('--bs-light-' + chartColor);\n  return {\n    series: [{\n      name: 'Net Profit',\n      data: [15, 25, 15, 40, 20, 50]\n    }],\n    chart: {\n      fontFamily: 'inherit',\n      type: 'area',\n      height: chartHeight,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    plotOptions: {},\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'solid',\n      opacity: 1\n    },\n    stroke: {\n      curve: 'smooth',\n      show: true,\n      width: 3,\n      colors: [baseColor]\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      },\n      crosshairs: {\n        show: false,\n        position: 'front',\n        stroke: {\n          color: strokeColor,\n          width: 1,\n          dashArray: 3\n        }\n      },\n      tooltip: {\n        enabled: false\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 60,\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: '12px'\n      },\n      y: {\n        formatter: function (val) {\n          return '$' + val + ' thousands';\n        }\n      }\n    },\n    colors: [lightColor],\n    markers: {\n      colors: [lightColor],\n      strokeColors: [baseColor],\n      strokeWidth: 3\n    }\n  };\n};\nexport { MixedWidget10 };\nvar _c;\n$RefreshReg$(_c, \"MixedWidget10\");","map":{"version":3,"names":["React","useEffect","useRef","ApexCharts","getCSSVariableValue","MixedWidget10","className","chartColor","chartHeight","chartRef","current","chart","chartOptions","render","destroy","labelColor","strokeColor","baseColor","lightColor","series","name","data","fontFamily","type","height","toolbar","show","zoom","enabled","sparkline","plotOptions","legend","dataLabels","fill","opacity","stroke","curve","width","colors","xaxis","categories","axisBorder","axisTicks","labels","style","fontSize","crosshairs","position","color","dashArray","tooltip","yaxis","min","max","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","y","formatter","val","markers","strokeColors","strokeWidth"],"sources":["/Users/ahmadhannan/Downloads/fgfgfg/src/_metronic/partials/widgets/mixed/MixedWidget10.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useRef} from 'react'\r\nimport ApexCharts, {ApexOptions} from 'apexcharts'\r\nimport {getCSSVariableValue} from '../../../assets/ts/_utils'\r\n\r\ntype Props = {\r\n  className: string\r\n  chartColor: string\r\n  chartHeight: string\r\n}\r\n\r\nconst MixedWidget10: React.FC<Props> = ({className, chartColor, chartHeight}) => {\r\n  const chartRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  useEffect(() => {\r\n    if (!chartRef.current) {\r\n      return\r\n    }\r\n\r\n    const chart = new ApexCharts(chartRef.current, chartOptions(chartColor, chartHeight))\r\n    if (chart) {\r\n      chart.render()\r\n    }\r\n\r\n    return () => {\r\n      if (chart) {\r\n        chart.destroy()\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [chartRef])\r\n\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      {/* begin::Body */}\r\n      <div className='card-body d-flex flex-column p-0'>\r\n        {/* begin::Stats */}\r\n        <div className='flex-grow-1 card-p pb-0'>\r\n          <div className='d-flex flex-stack flex-wrap'>\r\n            <div className='me-2'>\r\n              <a href='#' className='text-dark text-hover-primary fw-bolder fs-3'>\r\n                Generate Reports\r\n              </a>\r\n\r\n              <div className='text-muted fs-7 fw-bold'>Finance and accounting reports</div>\r\n            </div>\r\n\r\n            <div className={`fw-bolder fs-3 text-${chartColor}`}>$24,500</div>\r\n          </div>\r\n        </div>\r\n        {/* end::Stats */}\r\n\r\n        {/* begin::Chart */}\r\n        <div ref={chartRef} className='mixed-widget-7-chart card-rounded-bottom'></div>\r\n        {/* end::Chart */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst chartOptions = (chartColor: string, chartHeight: string): ApexOptions => {\r\n  const labelColor = getCSSVariableValue('--bs-gray-800')\r\n  const strokeColor = getCSSVariableValue('--bs-gray-300')\r\n  const baseColor = getCSSVariableValue('--bs-' + chartColor)\r\n  const lightColor = getCSSVariableValue('--bs-light-' + chartColor)\r\n\r\n  return {\r\n    series: [\r\n      {\r\n        name: 'Net Profit',\r\n        data: [15, 25, 15, 40, 20, 50],\r\n      },\r\n    ],\r\n    chart: {\r\n      fontFamily: 'inherit',\r\n      type: 'area',\r\n      height: chartHeight,\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      zoom: {\r\n        enabled: false,\r\n      },\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    plotOptions: {},\r\n    legend: {\r\n      show: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    fill: {\r\n      type: 'solid',\r\n      opacity: 1,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      show: true,\r\n      width: 3,\r\n      colors: [baseColor],\r\n    },\r\n    xaxis: {\r\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n      labels: {\r\n        show: false,\r\n        style: {\r\n          colors: labelColor,\r\n          fontSize: '12px',\r\n        },\r\n      },\r\n      crosshairs: {\r\n        show: false,\r\n        position: 'front',\r\n        stroke: {\r\n          color: strokeColor,\r\n          width: 1,\r\n          dashArray: 3,\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      min: 0,\r\n      max: 60,\r\n      labels: {\r\n        show: false,\r\n        style: {\r\n          colors: labelColor,\r\n          fontSize: '12px',\r\n        },\r\n      },\r\n    },\r\n    states: {\r\n      normal: {\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n      hover: {\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n      active: {\r\n        allowMultipleDataPointsSelection: false,\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      style: {\r\n        fontSize: '12px',\r\n      },\r\n      y: {\r\n        formatter: function (val) {\r\n          return '$' + val + ' thousands'\r\n        },\r\n      },\r\n    },\r\n    colors: [lightColor],\r\n    markers: {\r\n      colors: [lightColor],\r\n      strokeColors: [baseColor],\r\n      strokeWidth: 3,\r\n    },\r\n  }\r\n}\r\n\r\nexport {MixedWidget10}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}