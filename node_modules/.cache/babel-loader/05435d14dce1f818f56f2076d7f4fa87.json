{"ast":null,"code":"import { DataUtil, ElementStyleUtil, EventHandlerUtil, getUniqueIdWithPrefix, getAttributeValueByBreakpoint } from '../_utils/index';\nconst defaultFeedbackOptions = {\n  width: 100,\n  placement: 'top-center',\n  content: '',\n  type: 'popup'\n};\nclass FeedbackComponent {\n  constructor(_element, options) {\n    this.element = void 0;\n    this.options = void 0;\n    this.instanceUid = void 0;\n    this.shown = void 0;\n    this._handlers = () => {\n      this.element.addEventListener('click', e => {\n        e.preventDefault();\n        this._go();\n      });\n    };\n    this._go = () => {};\n    this.showPopup = () => {\n      this.element = document.createElement('DIV');\n      this.element.classList.add('feedback feedback-popup');\n      this.element.innerHTML = this.options.content || '';\n      if (this.options.placement === 'top-center') {\n        this.setPopupTopCenterPosition();\n      }\n      document.body.appendChild(this.element);\n      this.element.classList.add('feedback-shown');\n      this.shown = true;\n    };\n    this.setPopupTopCenterPosition = () => {\n      var _this$options$width;\n      const width = getAttributeValueByBreakpoint(((_this$options$width = this.options.width) === null || _this$options$width === void 0 ? void 0 : _this$options$width.toString()) || '0');\n      const height = ElementStyleUtil.get(this.element, 'height');\n      this.element.classList.add('feedback-top-center');\n      ElementStyleUtil.set(this.element, 'width', width);\n      ElementStyleUtil.set(this.element, 'left', '50%');\n      ElementStyleUtil.set(this.element, 'top', '-' + height);\n    };\n    this.hidePopup = () => {\n      this.element.remove();\n    };\n    this.show = () => {\n      if (EventHandlerUtil.trigger(this.element, 'kt.feedback.show') === false) {\n        return;\n      }\n      if (this.options.type === 'popup') {\n        this.showPopup();\n      }\n      EventHandlerUtil.trigger(this.element, 'kt.feedback.shown');\n      return this;\n    };\n    this.hide = () => {\n      if (EventHandlerUtil.trigger(this.element, 'kt.feedback.hide') === false) {\n        return;\n      }\n      if (this.options.type === 'popup') {\n        this.hidePopup();\n      }\n      this.shown = false;\n      EventHandlerUtil.trigger(this.element, 'kt.feedback.hidden');\n      return this;\n    };\n    this.isShown = () => {\n      return this.isShown;\n    };\n    this.getElement = () => {\n      return this.element;\n    };\n    this.on = (name, handler) => {\n      return EventHandlerUtil.on(this.element, name, handler);\n    };\n    this.one = (name, handler) => {\n      return EventHandlerUtil.one(this.element, name, handler);\n    };\n    this.off = name => {\n      return EventHandlerUtil.off(this.element, name);\n    };\n    this.trigger = (name, event) => {\n      return EventHandlerUtil.trigger(this.element, name, event);\n    };\n    this.element = _element;\n    this.options = Object.assign(defaultFeedbackOptions, options);\n    this.instanceUid = getUniqueIdWithPrefix('feedback');\n    this.shown = false;\n\n    // Event handlers\n    this._handlers(); // will add in the show popup\n    DataUtil.set(this.element, 'feedback', this);\n  }\n  // Create Instances\n  static createInstances(selector) {\n    throw new Error('not implemented');\n  }\n\n  // Static methods\n  static hasInstace(element) {\n    throw new Error('not implemented');\n  }\n  static getInstance(element) {\n    throw new Error('not implemented');\n  }\n  static bootstrap() {\n    let attr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '[data-Feedback]';\n    throw new Error('not implemented');\n  }\n}\nexport { FeedbackComponent, defaultFeedbackOptions };","map":{"version":3,"names":["DataUtil","ElementStyleUtil","EventHandlerUtil","getUniqueIdWithPrefix","getAttributeValueByBreakpoint","defaultFeedbackOptions","width","placement","content","type","FeedbackComponent","constructor","_element","options","element","instanceUid","shown","_handlers","addEventListener","e","preventDefault","_go","showPopup","document","createElement","classList","add","innerHTML","setPopupTopCenterPosition","body","appendChild","toString","height","get","set","hidePopup","remove","show","trigger","hide","isShown","getElement","on","name","handler","one","off","event","Object","assign","createInstances","selector","Error","hasInstace","getInstance","bootstrap","attr"],"sources":["/Users/ahmadhannan/Downloads/fgfgfg/src/_metronic/assets/ts/components/_FeedbackComponent.ts"],"sourcesContent":["import {\r\n  DataUtil,\r\n  ElementStyleUtil,\r\n  EventHandlerUtil,\r\n  getUniqueIdWithPrefix,\r\n  getAttributeValueByBreakpoint,\r\n} from '../_utils/index'\r\n\r\nexport interface FeedbackOptions {\r\n  width?: number\r\n  placement?: string\r\n  content?: string\r\n  type?: string\r\n}\r\n\r\nconst defaultFeedbackOptions: FeedbackOptions = {\r\n  width: 100,\r\n  placement: 'top-center',\r\n  content: '',\r\n  type: 'popup',\r\n}\r\n\r\nclass FeedbackComponent {\r\n  element: HTMLElement\r\n  options: FeedbackOptions\r\n  instanceUid: string\r\n  shown: boolean\r\n\r\n  constructor(_element: HTMLElement, options: FeedbackOptions) {\r\n    this.element = _element\r\n    this.options = Object.assign(defaultFeedbackOptions, options)\r\n    this.instanceUid = getUniqueIdWithPrefix('feedback')\r\n    this.shown = false\r\n\r\n    // Event handlers\r\n    this._handlers() // will add in the show popup\r\n    DataUtil.set(this.element, 'feedback', this)\r\n  }\r\n\r\n  private _handlers = () => {\r\n    this.element.addEventListener('click', (e: Event) => {\r\n      e.preventDefault()\r\n      this._go()\r\n    })\r\n  }\r\n\r\n  private _go = () => {}\r\n\r\n  private showPopup = () => {\r\n    this.element = document.createElement('DIV')\r\n\r\n    this.element.classList.add('feedback feedback-popup')\r\n    this.element.innerHTML = this.options.content || ''\r\n\r\n    if (this.options.placement === 'top-center') {\r\n      this.setPopupTopCenterPosition()\r\n    }\r\n\r\n    document.body.appendChild(this.element)\r\n    this.element.classList.add('feedback-shown')\r\n    this.shown = true\r\n  }\r\n\r\n  private setPopupTopCenterPosition = () => {\r\n    const width = getAttributeValueByBreakpoint(this.options.width?.toString() || '0')\r\n    const height = ElementStyleUtil.get(this.element, 'height')\r\n    this.element.classList.add('feedback-top-center')\r\n    ElementStyleUtil.set(this.element, 'width', width)\r\n    ElementStyleUtil.set(this.element, 'left', '50%')\r\n    ElementStyleUtil.set(this.element, 'top', '-' + height)\r\n  }\r\n\r\n  private hidePopup = () => {\r\n    this.element.remove()\r\n  }\r\n\r\n  ///////////////////////\r\n  // ** Public API  ** //\r\n  ///////////////////////\r\n  public show = () => {\r\n    if (EventHandlerUtil.trigger(this.element, 'kt.feedback.show') === false) {\r\n      return\r\n    }\r\n\r\n    if (this.options.type === 'popup') {\r\n      this.showPopup()\r\n    }\r\n\r\n    EventHandlerUtil.trigger(this.element, 'kt.feedback.shown')\r\n\r\n    return this\r\n  }\r\n\r\n  public hide = () => {\r\n    if (EventHandlerUtil.trigger(this.element, 'kt.feedback.hide') === false) {\r\n      return\r\n    }\r\n\r\n    if (this.options.type === 'popup') {\r\n      this.hidePopup()\r\n    }\r\n\r\n    this.shown = false\r\n    EventHandlerUtil.trigger(this.element, 'kt.feedback.hidden')\r\n    return this\r\n  }\r\n\r\n  public isShown = () => {\r\n    return this.isShown\r\n  }\r\n\r\n  public getElement = () => {\r\n    return this.element\r\n  }\r\n\r\n  // Event API\r\n  public on = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.on(this.element, name, handler)\r\n  }\r\n\r\n  public one = (name: string, handler: Function) => {\r\n    return EventHandlerUtil.one(this.element, name, handler)\r\n  }\r\n\r\n  public off = (name: string) => {\r\n    return EventHandlerUtil.off(this.element, name)\r\n  }\r\n\r\n  public trigger = (name: string, event: Event) => {\r\n    return EventHandlerUtil.trigger(this.element, name, event)\r\n  }\r\n\r\n  // Create Instances\r\n  public static createInstances(selector: string) {\r\n    throw new Error('not implemented')\r\n  }\r\n\r\n  // Static methods\r\n  public static hasInstace(element: HTMLElement) {\r\n    throw new Error('not implemented')\r\n  }\r\n\r\n  public static getInstance(element: HTMLElement) {\r\n    throw new Error('not implemented')\r\n  }\r\n\r\n  public static bootstrap(attr: string = '[data-Feedback]') {\r\n    throw new Error('not implemented')\r\n  }\r\n}\r\n\r\nexport {FeedbackComponent, defaultFeedbackOptions}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}