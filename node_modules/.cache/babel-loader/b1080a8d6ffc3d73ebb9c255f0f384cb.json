{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadhannan/Downloads/fgfgfg/src/_metronic/partials/widgets/statistics/StatisticsWidget3.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useRef } from 'react';\nimport ApexCharts from 'apexcharts';\nimport { getCSS, getCSSVariableValue } from '../../../assets/ts/_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatisticsWidget3 = _ref => {\n  _s();\n  let {\n    className,\n    title,\n    description,\n    change,\n    color\n  } = _ref;\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!chartRef.current) {\n      return;\n    }\n    const height = parseInt(getCSS(chartRef.current, 'height'));\n    const labelColor = getCSSVariableValue('--bs-gray-800');\n    const baseColor = getCSSVariableValue('--bs-' + color);\n    const lightColor = getCSSVariableValue('--bs-light-' + color);\n    const chart = new ApexCharts(chartRef.current, getChartOptions(height, labelColor, baseColor, lightColor));\n    if (chart) {\n      chart.render();\n    }\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chartRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body d-flex flex-column p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-stack flex-grow-1 card-p\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column me-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            className: \"text-dark text-hover-primary fw-bolder fs-3\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted fw-bold mt-1\",\n            dangerouslySetInnerHTML: {\n              __html: description\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"symbol symbol-50px\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `symbol-label fs-5 fw-bolder bg-light-${color} text-${color}`,\n            children: change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chartRef,\n        className: \"statistics-widget-3-chart card-rounded-bottom\",\n        style: {\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(StatisticsWidget3, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = StatisticsWidget3;\nexport { StatisticsWidget3 };\nfunction getChartOptions(height, labelColor, baseColor, lightColor) {\n  const options = {\n    series: [{\n      name: 'Net Profit',\n      data: [30, 45, 32, 70, 40]\n    }],\n    chart: {\n      fontFamily: 'inherit',\n      type: 'area',\n      height: height,\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    plotOptions: {},\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'solid',\n      opacity: 1\n    },\n    stroke: {\n      curve: 'smooth',\n      show: true,\n      width: 3,\n      colors: [baseColor]\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      },\n      crosshairs: {\n        show: false,\n        position: 'front',\n        stroke: {\n          color: '#E4E6EF',\n          width: 1,\n          dashArray: 3\n        }\n      },\n      tooltip: {\n        enabled: false\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 80,\n      labels: {\n        show: false,\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: '12px'\n      },\n      y: {\n        formatter: function (val) {\n          return '$' + val + ' thousands';\n        }\n      }\n    },\n    colors: [lightColor],\n    markers: {\n      colors: [lightColor],\n      strokeColors: [baseColor],\n      strokeWidth: 3\n    }\n  };\n  return options;\n}\nvar _c;\n$RefreshReg$(_c, \"StatisticsWidget3\");","map":{"version":3,"names":["React","useEffect","useRef","ApexCharts","getCSS","getCSSVariableValue","StatisticsWidget3","className","title","description","change","color","chartRef","current","height","parseInt","labelColor","baseColor","lightColor","chart","getChartOptions","render","destroy","__html","options","series","name","data","fontFamily","type","toolbar","show","zoom","enabled","sparkline","plotOptions","legend","dataLabels","fill","opacity","stroke","curve","width","colors","xaxis","categories","axisBorder","axisTicks","labels","style","fontSize","crosshairs","position","dashArray","tooltip","yaxis","min","max","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","y","formatter","val","markers","strokeColors","strokeWidth"],"sources":["/Users/ahmadhannan/Downloads/fgfgfg/src/_metronic/partials/widgets/statistics/StatisticsWidget3.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useRef} from 'react'\r\nimport ApexCharts, {ApexOptions} from 'apexcharts'\r\nimport {getCSS, getCSSVariableValue} from '../../../assets/ts/_utils'\r\n\r\ntype Props = {\r\n  className: string\r\n  title: string\r\n  description: string\r\n  change: string\r\n  color: string\r\n}\r\n\r\nconst StatisticsWidget3: React.FC<Props> = ({className, title, description, change, color}) => {\r\n  const chartRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  useEffect(() => {\r\n    if (!chartRef.current) {\r\n      return\r\n    }\r\n\r\n    const height = parseInt(getCSS(chartRef.current, 'height'))\r\n    const labelColor = getCSSVariableValue('--bs-gray-800')\r\n    const baseColor = getCSSVariableValue('--bs-' + color)\r\n    const lightColor = getCSSVariableValue('--bs-light-' + color)\r\n\r\n    const chart = new ApexCharts(\r\n      chartRef.current,\r\n      getChartOptions(height, labelColor, baseColor, lightColor)\r\n    )\r\n    if (chart) {\r\n      chart.render()\r\n    }\r\n\r\n    return () => {\r\n      if (chart) {\r\n        chart.destroy()\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [chartRef])\r\n\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      {/* begin::Body */}\r\n      <div className='card-body d-flex flex-column p-0'>\r\n        <div className='d-flex flex-stack flex-grow-1 card-p'>\r\n          <div className='d-flex flex-column me-2'>\r\n            <a href='#' className='text-dark text-hover-primary fw-bolder fs-3'>\r\n              {title}\r\n            </a>\r\n\r\n            <span\r\n              className='text-muted fw-bold mt-1'\r\n              dangerouslySetInnerHTML={{__html: description}}\r\n            ></span>\r\n          </div>\r\n\r\n          <span className='symbol symbol-50px'>\r\n            <span className={`symbol-label fs-5 fw-bolder bg-light-${color} text-${color}`}>\r\n              {change}\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <div\r\n          ref={chartRef}\r\n          className='statistics-widget-3-chart card-rounded-bottom'\r\n          style={{height: '150px'}}\r\n        ></div>\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {StatisticsWidget3}\r\n\r\nfunction getChartOptions(\r\n  height: number,\r\n  labelColor: string,\r\n  baseColor: string,\r\n  lightColor: string\r\n): ApexOptions {\r\n  const options: ApexOptions = {\r\n    series: [\r\n      {\r\n        name: 'Net Profit',\r\n        data: [30, 45, 32, 70, 40],\r\n      },\r\n    ],\r\n    chart: {\r\n      fontFamily: 'inherit',\r\n      type: 'area',\r\n      height: height,\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      zoom: {\r\n        enabled: false,\r\n      },\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    plotOptions: {},\r\n    legend: {\r\n      show: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    fill: {\r\n      type: 'solid',\r\n      opacity: 1,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      show: true,\r\n      width: 3,\r\n      colors: [baseColor],\r\n    },\r\n    xaxis: {\r\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n      labels: {\r\n        show: false,\r\n        style: {\r\n          colors: labelColor,\r\n          fontSize: '12px',\r\n        },\r\n      },\r\n      crosshairs: {\r\n        show: false,\r\n        position: 'front',\r\n        stroke: {\r\n          color: '#E4E6EF',\r\n          width: 1,\r\n          dashArray: 3,\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      min: 0,\r\n      max: 80,\r\n      labels: {\r\n        show: false,\r\n        style: {\r\n          colors: labelColor,\r\n          fontSize: '12px',\r\n        },\r\n      },\r\n    },\r\n    states: {\r\n      normal: {\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n      hover: {\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n      active: {\r\n        allowMultipleDataPointsSelection: false,\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      style: {\r\n        fontSize: '12px',\r\n      },\r\n      y: {\r\n        formatter: function (val) {\r\n          return '$' + val + ' thousands'\r\n        },\r\n      },\r\n    },\r\n    colors: [lightColor],\r\n    markers: {\r\n      colors: [lightColor],\r\n      strokeColors: [baseColor],\r\n      strokeWidth: 3,\r\n    },\r\n  }\r\n  return options\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}