{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadhannan/Downloads/fgfgfg/src/_metronic/i18n/i18nProvider.tsx\",\n  _s = $RefreshSig$();\nimport { useLang } from './Metronici18n';\nimport { IntlProvider } from 'react-intl';\nimport '@formatjs/intl-relativetimeformat/polyfill';\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\nimport '@formatjs/intl-relativetimeformat/locale-data/de';\nimport '@formatjs/intl-relativetimeformat/locale-data/es';\nimport '@formatjs/intl-relativetimeformat/locale-data/fr';\nimport '@formatjs/intl-relativetimeformat/locale-data/ja';\nimport '@formatjs/intl-relativetimeformat/locale-data/zh';\nimport deMessages from './messages/de.json';\nimport enMessages from './messages/en.json';\nimport esMessages from './messages/es.json';\nimport frMessages from './messages/fr.json';\nimport jaMessages from './messages/ja.json';\nimport zhMessages from './messages/zh.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allMessages = {\n  de: deMessages,\n  en: enMessages,\n  es: esMessages,\n  fr: frMessages,\n  ja: jaMessages,\n  zh: zhMessages\n};\nconst I18nProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const locale = useLang();\n  const messages = allMessages[locale];\n  return /*#__PURE__*/_jsxDEV(IntlProvider, {\n    locale: locale,\n    messages: messages,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(I18nProvider, \"dReTO0296CSZbayiNlOKjLlqWBo=\", false, function () {\n  return [useLang];\n});\n_c = I18nProvider;\nexport { I18nProvider };\nvar _c;\n$RefreshReg$(_c, \"I18nProvider\");","map":{"version":3,"names":["useLang","IntlProvider","deMessages","enMessages","esMessages","frMessages","jaMessages","zhMessages","allMessages","de","en","es","fr","ja","zh","I18nProvider","children","locale","messages"],"sources":["/Users/ahmadhannan/Downloads/fgfgfg/src/_metronic/i18n/i18nProvider.tsx"],"sourcesContent":["import { FC } from 'react'\r\nimport { useLang } from './Metronici18n'\r\nimport { IntlProvider } from 'react-intl'\r\nimport '@formatjs/intl-relativetimeformat/polyfill'\r\nimport '@formatjs/intl-relativetimeformat/locale-data/en'\r\nimport '@formatjs/intl-relativetimeformat/locale-data/de'\r\nimport '@formatjs/intl-relativetimeformat/locale-data/es'\r\nimport '@formatjs/intl-relativetimeformat/locale-data/fr'\r\nimport '@formatjs/intl-relativetimeformat/locale-data/ja'\r\nimport '@formatjs/intl-relativetimeformat/locale-data/zh'\r\n\r\nimport deMessages from './messages/de.json'\r\nimport enMessages from './messages/en.json'\r\nimport esMessages from './messages/es.json'\r\nimport frMessages from './messages/fr.json'\r\nimport jaMessages from './messages/ja.json'\r\nimport zhMessages from './messages/zh.json'\r\n\r\nconst allMessages = {\r\n  de: deMessages,\r\n  en: enMessages,\r\n  es: esMessages,\r\n  fr: frMessages,\r\n  ja: jaMessages,\r\n  zh: zhMessages,\r\n}\r\n\r\nconst I18nProvider: FC = ({ children }) => {\r\n  const locale = useLang()\r\n  const messages = allMessages[locale]\r\n\r\n  return (\r\n    <IntlProvider locale={locale} messages={messages}>\r\n      {children}\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nexport { I18nProvider }\r\n"],"mappings":";;AACA,SAASA,OAAO,QAAQ,gBAAgB;AACxC,SAASC,YAAY,QAAQ,YAAY;AACzC,OAAO,4CAA4C;AACnD,OAAO,kDAAkD;AACzD,OAAO,kDAAkD;AACzD,OAAO,kDAAkD;AACzD,OAAO,kDAAkD;AACzD,OAAO,kDAAkD;AACzD,OAAO,kDAAkD;AAEzD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,UAAU,MAAM,oBAAoB;AAAA;AAE3C,MAAMC,WAAW,GAAG;EAClBC,EAAE,EAAEP,UAAU;EACdQ,EAAE,EAAEP,UAAU;EACdQ,EAAE,EAAEP,UAAU;EACdQ,EAAE,EAAEP,UAAU;EACdQ,EAAE,EAAEP,UAAU;EACdQ,EAAE,EAAEP;AACN,CAAC;AAED,MAAMQ,YAAgB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACpC,MAAMC,MAAM,GAAGjB,OAAO,EAAE;EACxB,MAAMkB,QAAQ,GAAGV,WAAW,CAACS,MAAM,CAAC;EAEpC,oBACE,QAAC,YAAY;IAAC,MAAM,EAAEA,MAAO;IAAC,QAAQ,EAAEC,QAAS;IAAA,UAC9CF;EAAQ;IAAA;IAAA;IAAA;EAAA,QACI;AAEnB,CAAC;AAAA,GATKD,YAAgB;EAAA,QACLf,OAAO;AAAA;AAAA,KADlBe,YAAgB;AAWtB,SAASA,YAAY;AAAE;AAAA"},"metadata":{},"sourceType":"module"}