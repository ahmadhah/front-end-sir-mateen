{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadhannan/Downloads/fgfgfg/src/_metronic/partials/widgets/charts/ChartsWidget3.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useRef } from 'react';\nimport ApexCharts from 'apexcharts';\nimport { getCSS, getCSSVariableValue } from '../../../assets/ts/_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartsWidget3 = _ref => {\n  _s();\n  let {\n    className\n  } = _ref;\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!chartRef.current) {\n      return;\n    }\n    const height = parseInt(getCSS(chartRef.current, 'height'));\n    const chart = new ApexCharts(chartRef.current, getChartOptions(height));\n    if (chart) {\n      chart.render();\n    }\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n  }, [chartRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `card ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header border-0 pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card-title align-items-start flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"card-label fw-bolder fs-3 mb-1\",\n          children: \"Recent Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted fw-bold fs-7\",\n          children: \"More than 1000 new records\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-toolbar\",\n        \"data-kt-buttons\": \"true\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn-sm btn-color-muted btn-active btn-active-primary active px-4 me-1\",\n          id: \"kt_charts_widget_3_year_btn\",\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn-sm btn-color-muted btn-active btn-active-primary px-4 me-1\",\n          id: \"kt_charts_widget_3_month_btn\",\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"btn btn-sm btn-color-muted btn-active btn-active-primary px-4\",\n          id: \"kt_charts_widget_3_week_btn\",\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chartRef,\n        id: \"kt_charts_widget_3_chart\",\n        style: {\n          height: '350px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartsWidget3, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = ChartsWidget3;\nexport { ChartsWidget3 };\nfunction getChartOptions(height) {\n  const labelColor = getCSSVariableValue('--bs-gray-500');\n  const borderColor = getCSSVariableValue('--bs-gray-200');\n  const baseColor = getCSSVariableValue('--bs-info');\n  const lightColor = getCSSVariableValue('--bs-light-info');\n  return {\n    series: [{\n      name: 'Net Profit',\n      data: [30, 40, 40, 90, 90, 70, 70]\n    }],\n    chart: {\n      fontFamily: 'inherit',\n      type: 'area',\n      height: 350,\n      toolbar: {\n        show: false\n      }\n    },\n    plotOptions: {},\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    fill: {\n      type: 'solid',\n      opacity: 1\n    },\n    stroke: {\n      curve: 'smooth',\n      show: true,\n      width: 3,\n      colors: [baseColor]\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      },\n      crosshairs: {\n        position: 'front',\n        stroke: {\n          color: baseColor,\n          width: 1,\n          dashArray: 3\n        }\n      },\n      tooltip: {\n        enabled: true,\n        formatter: undefined,\n        offsetY: 0,\n        style: {\n          fontSize: '12px'\n        }\n      }\n    },\n    yaxis: {\n      labels: {\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: '12px'\n      },\n      y: {\n        formatter: function (val) {\n          return '$' + val + ' thousands';\n        }\n      }\n    },\n    colors: [lightColor],\n    grid: {\n      borderColor: borderColor,\n      strokeDashArray: 4,\n      yaxis: {\n        lines: {\n          show: true\n        }\n      }\n    },\n    markers: {\n      strokeColors: baseColor,\n      strokeWidth: 3\n    }\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"ChartsWidget3\");","map":{"version":3,"names":["React","useEffect","useRef","ApexCharts","getCSS","getCSSVariableValue","ChartsWidget3","className","chartRef","current","height","parseInt","chart","getChartOptions","render","destroy","labelColor","borderColor","baseColor","lightColor","series","name","data","fontFamily","type","toolbar","show","plotOptions","legend","dataLabels","enabled","fill","opacity","stroke","curve","width","colors","xaxis","categories","axisBorder","axisTicks","labels","style","fontSize","crosshairs","position","color","dashArray","tooltip","formatter","undefined","offsetY","yaxis","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","y","val","grid","strokeDashArray","lines","markers","strokeColors","strokeWidth"],"sources":["/Users/ahmadhannan/Downloads/fgfgfg/src/_metronic/partials/widgets/charts/ChartsWidget3.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useEffect, useRef} from 'react'\r\nimport ApexCharts, {ApexOptions} from 'apexcharts'\r\nimport {getCSS, getCSSVariableValue} from '../../../assets/ts/_utils'\r\n\r\ntype Props = {\r\n  className: string\r\n}\r\n\r\nconst ChartsWidget3: React.FC<Props> = ({className}) => {\r\n  const chartRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  useEffect(() => {\r\n    if (!chartRef.current) {\r\n      return\r\n    }\r\n\r\n    const height = parseInt(getCSS(chartRef.current, 'height'))\r\n\r\n    const chart = new ApexCharts(chartRef.current, getChartOptions(height))\r\n    if (chart) {\r\n      chart.render()\r\n    }\r\n\r\n    return () => {\r\n      if (chart) {\r\n        chart.destroy()\r\n      }\r\n    }\r\n  }, [chartRef])\r\n\r\n  return (\r\n    <div className={`card ${className}`}>\r\n      {/* begin::Header */}\r\n      <div className='card-header border-0 pt-5'>\r\n        <h3 className='card-title align-items-start flex-column'>\r\n          <span className='card-label fw-bolder fs-3 mb-1'>Recent Transactions</span>\r\n\r\n          <span className='text-muted fw-bold fs-7'>More than 1000 new records</span>\r\n        </h3>\r\n\r\n        {/* begin::Toolbar */}\r\n        <div className='card-toolbar' data-kt-buttons='true'>\r\n          <a\r\n            className='btn btn-sm btn-color-muted btn-active btn-active-primary active px-4 me-1'\r\n            id='kt_charts_widget_3_year_btn'\r\n          >\r\n            Year\r\n          </a>\r\n\r\n          <a\r\n            className='btn btn-sm btn-color-muted btn-active btn-active-primary px-4 me-1'\r\n            id='kt_charts_widget_3_month_btn'\r\n          >\r\n            Month\r\n          </a>\r\n\r\n          <a\r\n            className='btn btn-sm btn-color-muted btn-active btn-active-primary px-4'\r\n            id='kt_charts_widget_3_week_btn'\r\n          >\r\n            Week\r\n          </a>\r\n        </div>\r\n        {/* end::Toolbar */}\r\n      </div>\r\n      {/* end::Header */}\r\n\r\n      {/* begin::Body */}\r\n      <div className='card-body'>\r\n        {/* begin::Chart */}\r\n        <div ref={chartRef} id='kt_charts_widget_3_chart' style={{height: '350px'}}></div>\r\n        {/* end::Chart */}\r\n      </div>\r\n      {/* end::Body */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {ChartsWidget3}\r\n\r\nfunction getChartOptions(height: number): ApexOptions {\r\n  const labelColor = getCSSVariableValue('--bs-gray-500')\r\n  const borderColor = getCSSVariableValue('--bs-gray-200')\r\n  const baseColor = getCSSVariableValue('--bs-info')\r\n  const lightColor = getCSSVariableValue('--bs-light-info')\r\n\r\n  return {\r\n    series: [\r\n      {\r\n        name: 'Net Profit',\r\n        data: [30, 40, 40, 90, 90, 70, 70],\r\n      },\r\n    ],\r\n    chart: {\r\n      fontFamily: 'inherit',\r\n      type: 'area',\r\n      height: 350,\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n    },\r\n    plotOptions: {},\r\n    legend: {\r\n      show: false,\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    fill: {\r\n      type: 'solid',\r\n      opacity: 1,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      show: true,\r\n      width: 3,\r\n      colors: [baseColor],\r\n    },\r\n    xaxis: {\r\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n      axisBorder: {\r\n        show: false,\r\n      },\r\n      axisTicks: {\r\n        show: false,\r\n      },\r\n      labels: {\r\n        style: {\r\n          colors: labelColor,\r\n          fontSize: '12px',\r\n        },\r\n      },\r\n      crosshairs: {\r\n        position: 'front',\r\n        stroke: {\r\n          color: baseColor,\r\n          width: 1,\r\n          dashArray: 3,\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        formatter: undefined,\r\n        offsetY: 0,\r\n        style: {\r\n          fontSize: '12px',\r\n        },\r\n      },\r\n    },\r\n    yaxis: {\r\n      labels: {\r\n        style: {\r\n          colors: labelColor,\r\n          fontSize: '12px',\r\n        },\r\n      },\r\n    },\r\n    states: {\r\n      normal: {\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n      hover: {\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n      active: {\r\n        allowMultipleDataPointsSelection: false,\r\n        filter: {\r\n          type: 'none',\r\n          value: 0,\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      style: {\r\n        fontSize: '12px',\r\n      },\r\n      y: {\r\n        formatter: function (val) {\r\n          return '$' + val + ' thousands'\r\n        },\r\n      },\r\n    },\r\n    colors: [lightColor],\r\n    grid: {\r\n      borderColor: borderColor,\r\n      strokeDashArray: 4,\r\n      yaxis: {\r\n        lines: {\r\n          show: true,\r\n        },\r\n      },\r\n    },\r\n    markers: {\r\n      strokeColors: baseColor,\r\n      strokeWidth: 3,\r\n    },\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}