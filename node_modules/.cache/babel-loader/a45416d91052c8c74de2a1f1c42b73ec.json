{"ast":null,"code":"var _jsxFileName = \"/Users/ahmadhannan/Downloads/fgfgfg/src/_helper/partials/widgets/graphs/Graph3.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable */\nimport React, { useEffect, useRef } from 'react';\nimport ApexCharts from 'apexcharts';\nimport { getCSSVariableValue } from '../../../../_metronic/assets/ts/_utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Graph3 = _ref => {\n  _s();\n  let {\n    chartColor,\n    chartHeight\n  } = _ref;\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!chartRef.current) {\n      return;\n    }\n    const chart = new ApexCharts(chartRef.current, chartOptions(chartHeight));\n    if (chart) {\n      chart.render();\n    }\n    return () => {\n      if (chart) {\n        chart.destroy();\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [chartRef]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartRef,\n      className: `mixed-widget-12-chart card-rounded-bottom bg-${chartColor}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Graph3, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = Graph3;\nconst chartOptions = chartHeight => {\n  const labelColor = getCSSVariableValue('--bs-gray-500');\n  const borderColor = getCSSVariableValue('--bs-gray-200');\n  return {\n    series: [{\n      name: 'Net Profit',\n      data: [35, 65, 75, 55, 45, 60, 55]\n    }, {\n      name: 'Revenue',\n      data: [40, 70, 80, 60, 50, 65, 60]\n    }],\n    chart: {\n      fontFamily: 'inherit',\n      type: 'bar',\n      height: chartHeight,\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '30%',\n        borderRadius: 5\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      show: true,\n      width: 1,\n      colors: ['transparent']\n    },\n    xaxis: {\n      categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      },\n      labels: {\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    yaxis: {\n      min: 0,\n      max: 100,\n      labels: {\n        style: {\n          colors: labelColor,\n          fontSize: '12px'\n        }\n      }\n    },\n    fill: {\n      type: ['solid', 'solid'],\n      opacity: [0.25, 1]\n    },\n    states: {\n      normal: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      hover: {\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      },\n      active: {\n        allowMultipleDataPointsSelection: false,\n        filter: {\n          type: 'none',\n          value: 0\n        }\n      }\n    },\n    tooltip: {\n      style: {\n        fontSize: '12px'\n      },\n      y: {\n        formatter: function (val) {\n          return '$' + val + ' thousands';\n        }\n      },\n      marker: {\n        show: false\n      }\n    },\n    colors: ['#ffffff', '#ffffff'],\n    grid: {\n      borderColor: borderColor,\n      strokeDashArray: 4,\n      yaxis: {\n        lines: {\n          show: true\n        }\n      },\n      padding: {\n        left: 20,\n        right: 20\n      }\n    }\n  };\n};\nexport { Graph3 };\nvar _c;\n$RefreshReg$(_c, \"Graph3\");","map":{"version":3,"names":["React","useEffect","useRef","ApexCharts","getCSSVariableValue","Graph3","chartColor","chartHeight","chartRef","current","chart","chartOptions","render","destroy","labelColor","borderColor","series","name","data","fontFamily","type","height","toolbar","show","sparkline","enabled","plotOptions","bar","horizontal","columnWidth","borderRadius","legend","dataLabels","stroke","width","colors","xaxis","categories","axisBorder","axisTicks","labels","style","fontSize","yaxis","min","max","fill","opacity","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","tooltip","y","formatter","val","marker","grid","strokeDashArray","lines","padding","left","right"],"sources":["/Users/ahmadhannan/Downloads/fgfgfg/src/_helper/partials/widgets/graphs/Graph3.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable */\r\nimport React, { useEffect, useRef } from 'react'\r\nimport ApexCharts, { ApexOptions } from 'apexcharts'\r\nimport clsx from 'clsx'\r\nimport { getCSSVariableValue } from '../../../../_metronic/assets/ts/_utils'\r\n\r\ntype Props = {\r\n    chartColor: string\r\n    chartHeight: string\r\n}\r\n\r\nconst Graph3: React.FC<Props> = ({ chartColor, chartHeight }) => {\r\n    const chartRef = useRef<HTMLDivElement | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (!chartRef.current) {\r\n            return\r\n        }\r\n\r\n        const chart = new ApexCharts(chartRef.current, chartOptions(chartHeight))\r\n        if (chart) {\r\n            chart.render()\r\n        }\r\n\r\n        return () => {\r\n            if (chart) {\r\n                chart.destroy()\r\n            }\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [chartRef])\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* begin::Chart  */}\r\n            <div\r\n                ref={chartRef}\r\n                className={`mixed-widget-12-chart card-rounded-bottom bg-${chartColor}`}\r\n            ></div>\r\n            {/* end::Chart  */}\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst chartOptions = (chartHeight: string): ApexOptions => {\r\n    const labelColor = getCSSVariableValue('--bs-gray-500')\r\n    const borderColor = getCSSVariableValue('--bs-gray-200')\r\n\r\n    return {\r\n        series: [\r\n            {\r\n                name: 'Net Profit',\r\n                data: [35, 65, 75, 55, 45, 60, 55],\r\n            },\r\n            {\r\n                name: 'Revenue',\r\n                data: [40, 70, 80, 60, 50, 65, 60],\r\n            },\r\n        ],\r\n        chart: {\r\n            fontFamily: 'inherit',\r\n            type: 'bar',\r\n            height: chartHeight,\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n            sparkline: {\r\n                enabled: true,\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                columnWidth: '30%',\r\n                borderRadius: 5,\r\n            },\r\n        },\r\n        legend: {\r\n            show: false,\r\n        },\r\n        dataLabels: {\r\n            enabled: false,\r\n        },\r\n        stroke: {\r\n            show: true,\r\n            width: 1,\r\n            colors: ['transparent'],\r\n        },\r\n        xaxis: {\r\n            categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n            axisBorder: {\r\n                show: false,\r\n            },\r\n            axisTicks: {\r\n                show: false,\r\n            },\r\n            labels: {\r\n                style: {\r\n                    colors: labelColor,\r\n                    fontSize: '12px',\r\n                },\r\n            },\r\n        },\r\n        yaxis: {\r\n            min: 0,\r\n            max: 100,\r\n            labels: {\r\n                style: {\r\n                    colors: labelColor,\r\n                    fontSize: '12px',\r\n                },\r\n            },\r\n        },\r\n        fill: {\r\n            type: ['solid', 'solid'],\r\n            opacity: [0.25, 1],\r\n        },\r\n        states: {\r\n            normal: {\r\n                filter: {\r\n                    type: 'none',\r\n                    value: 0,\r\n                },\r\n            },\r\n            hover: {\r\n                filter: {\r\n                    type: 'none',\r\n                    value: 0,\r\n                },\r\n            },\r\n            active: {\r\n                allowMultipleDataPointsSelection: false,\r\n                filter: {\r\n                    type: 'none',\r\n                    value: 0,\r\n                },\r\n            },\r\n        },\r\n        tooltip: {\r\n            style: {\r\n                fontSize: '12px',\r\n            },\r\n            y: {\r\n                formatter: function (val) {\r\n                    return '$' + val + ' thousands'\r\n                },\r\n            },\r\n            marker: {\r\n                show: false,\r\n            },\r\n        },\r\n        colors: ['#ffffff', '#ffffff'],\r\n        grid: {\r\n            borderColor: borderColor,\r\n            strokeDashArray: 4,\r\n            yaxis: {\r\n                lines: {\r\n                    show: true,\r\n                },\r\n            },\r\n            padding: {\r\n                left: 20,\r\n                right: 20,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nexport { Graph3 }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}